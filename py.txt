#Python P1 Write a python program that asks the user to enter their name and their age and Print
# out a message addressed to them that tells them the year that they will turn 100 years old.
from datetime import date
name=input("Enter your name:")
print(name)
age=input("Enter age")
age=float(age)
print(age)
year=100-age
print(year)
# creating the date object of today's date
todays_date = date.today()
# printing todays date
print("Current date: ", todays_date)
# fetching the current year, month and day of today
print("You will be 100 years old in year : ",int(todays_date.year+year))
------------------------------------------------------------------------------------
#Python P2 : Write a program to check whether the number is even or odd, print out an appropriate # message to the user

num = int(input("Enter a number: "))

if num % 2 == 0:
    print(f"{num} is an even number.")
else:
    print(f"{num} is an odd number.")

------------------------------------------------------------------------------------
#Python P3: Write a program which will find all such numbers which are divisible by 7.
start_range = int(input("Enter the start of the range: "))
end_range = int(input("Enter the end of the range: "))

divisible_by_7 = []

for num in range(start_range, end_range + 1):
    if num % 7 == 0:
        divisible_by_7.append(num)

print(f"Numbers divisible by 7 in the range {start_range} to {end_range}:")
print(divisible_by_7)

------------------------------------------------------------------------------------
#python P4 :Write a program that takes a list of numbers (for example, a = [5, 10, 15, 20, 25]) and
# makes a new list of only the first and last elements of the given list. Write this code inside a
# function.
def extract_first_and_last(input_list):
    if len(input_list) < 2:
        print("List should have at least two elements.")
        return None

    result_list = [input_list[0], input_list[-1]]

    return result_list

input_list = [5, 10, 15, 20, 25]
result = extract_first_and_last(input_list)

if result is not None:
    print(f"Original List: {input_list}")
    print(f"New List with First and Last Elements: {result}")

------------------------------------------------------------------------------------
# python P5: Write a program that returns a list that contains only the elements that are common between the lists (without duplicates). Make sure your program works on two lists of different sizes.
# Find common elements in both lists.
list1=[6,7,8,233,44,233,700]
list2=[8,55,99,233,233,7]
if len(list1)==len(list2):
print("Lists have same length")
else:
print("Lists do not have same length")
print(" Common elements in both lists ")
print(set(list1).intersection(list2))
------------------------------------------------------------------------------------
# python P6: Write a program (using functions!) that asks the user for a long string containing multiple words. Print back to the user the same string, except with the words in backwards order.
# E.gif input is “ I am Msc student” output is : ”student Msc am I”
inputString = input("Enter you string : ")
print(inputString)
inputString = inputString.split(" ")
print(inputString)
inputString.reverse()
inputString = " ".join(inputString)
print(inputString)
------------------------------------------------------------------------------------
# python P7: Write a Python program to solve the Fibonacci sequence using recursion.
def fibonacci(n):
    if n <= 1:
        return n
    else:
        return fibonacci(n - 1) + fibonacci(n - 2)
terms = int(input("Enter the number of Fibonacci terms to generate: "))

if terms <= 0:
    print("Please enter a positive integer.")
else:
    fib_sequence = [fibonacci(i) for i in range(terms)]
    print(f"Fibonacci Sequence with {terms} terms: {fib_sequence}")
------------------------------------------------------------------------------------
# python P8: Write a Python program to copy the contents of a file to another file
def copy_file(source_file, destination_file):
    try:
        # Open the source file in read mode
        with open(source_file, 'r') as source:
            # Read the content of the source file
            content = source.read()

            # Open the destination file in write mode
            with open(destination_file, 'w') as destination:
                # Write the content to the destination file
                destination.write(content)

        print(f"Content copied from {source_file} to {destination_file} successfully.")
    except FileNotFoundError:
        print("One or both files not found.")
    except Exception as e:
        print(f"An error occurred: {e}")
------------------------------------------------------------------------------------
# python P9: Write a Python class named Circle constructed by a radius and two methods whichwill
#compute the area and the perimeter of a circle
import math

class Circle:
    def __init__(self, radius):
        self.radius = radius

    def compute_area(self):
        """
        Compute the area of the circle.
        """
        area = math.pi * self.radius ** 2
        return area

    def compute_perimeter(self):
        """
        Compute the perimeter (circumference) of the circle.
        """
        perimeter = 2 * math.pi * self.radius
        return perimeter
------------------------------------------------------------------------------------
# python P10: Write a program that prints out all the elements of the list that are less than 10
# Sample list
my_list = [1, 3, 8, 5, 12, 6, 7, 15, 4]

# Print elements less than 10
print("Elements less than 10:")
for element in my_list:
    if element < 10:
        print(element)

------------------------------------------------------------------------------------
# python P11: Write a program that accepts a sentence & calculate the number of letters and digits.
sentence = input("Enter a sentence: ")

letter_count = 0
digit_count = 0

for char in sentence:
    if char.isalpha():
        letter_count += 1
    elif char.isdigit():
        digit_count += 1
print(f"Number of letters: {letter_count}")
print(f"Number of digits: {digit_count}")
------------------------------------------------------------------------------------
# python P12: Write a Python program to count the number of lines in a text file.
def count_lines(file_path):
    try:
        # Open the file in read mode
        with open(file_path, 'r') as file:
            # Read all lines into a list
            lines = file.readlines()

        # Count the number of lines
        num_lines = len(lines)

        return num_lines
    except FileNotFoundError:
        print(f"File '{file_path}' not found.")
        return -1
    except Exception as e:
        print(f"An error occurred: {e}")
        return -1
